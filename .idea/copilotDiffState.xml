<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/chatait/panictutorgpt/ui/dashboard/DashboardFragment.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/chatait/panictutorgpt/ui/dashboard/DashboardFragment.kt" />
              <option name="originalContent" value="package com.chatait.panictutorgpt.ui.dashboard&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.DatePicker&#10;import android.widget.EditText&#10;import androidx.appcompat.app.AlertDialog&#10;import androidx.fragment.app.Fragment&#10;import androidx.lifecycle.ViewModelProvider&#10;import com.chatait.panictutorgpt.R&#10;import com.chatait.panictutorgpt.databinding.FragmentDashboardBinding&#10;import java.util.Calendar&#10;&#10;class DashboardFragment : Fragment() {&#10;&#10;    private var _binding: FragmentDashboardBinding? = null&#10;&#10;    // This property is only valid between onCreateView and&#10;    // onDestroyView.&#10;    private val binding get() = _binding!!&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        val dashboardViewModel =&#10;            ViewModelProvider(this).get(DashboardViewModel::class.java)&#10;&#10;        _binding = FragmentDashboardBinding.inflate(inflater, container, false)&#10;        val root: View = binding.root&#10;&#10;        // 予定追加ボタンのクリックリスナー&#10;        binding.dashboardEntryButton.setOnClickListener {&#10;            val calendar = Calendar.getInstance()&#10;            val inflater = LayoutInflater.from(requireContext())&#10;            val datePickerView = inflater.inflate(R.layout.dialog_custom_date_picker, null)&#10;            val datePicker = datePickerView.findViewById&lt;DatePicker&gt;(R.id.customDatePicker)&#10;            datePicker.init(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH), null)&#10;&#10;            val dateDialog = AlertDialog.Builder(requireContext())&#10;                .setTitle(&quot;テストの日付を選択&quot;)&#10;                .setView(datePickerView)&#10;                .setPositiveButton(&quot;完了&quot;) { _, _ -&gt;&#10;                    val year = datePicker.year&#10;                    val month = datePicker.month&#10;                    val day = datePicker.dayOfMonth&#10;                    showAddScheduleForm(year, month, day)&#10;                }&#10;                .setNegativeButton(&quot;キャンセル&quot;, null)&#10;                .create()&#10;            dateDialog.show()&#10;        }&#10;&#10;        dashboardViewModel.text.observe(viewLifecycleOwner) {&#10;&#10;        }&#10;        return root&#10;    }&#10;&#10;    // 日付と教科名を入力する関数（引数で日付を受け取る）&#10;    private fun showAddScheduleForm(year: Int, month: Int, day: Int) {&#10;        val context = requireContext()&#10;        val inflater = LayoutInflater.from(context)&#10;        val dialogView = inflater.inflate(R.layout.dialog_add_schedule, null)&#10;        val subjectEdit = dialogView.findViewById&lt;EditText&gt;(R.id.editTextSubject)&#10;&#10;        val dialog = AlertDialog.Builder(context)&#10;            .setTitle(&quot;テストの予定を追加&quot;)&#10;            .setView(dialogView)&#10;            .setPositiveButton(&quot;追加&quot;) { _, _ -&gt;&#10;                val date = &quot;%04d/%02d/%02d&quot;.format(year, month + 1, day)&#10;                val subject = subjectEdit.text.toString()&#10;                // ここで予定データを保存する処理を追加可能&#10;            }&#10;            .setNegativeButton(&quot;キャンセル&quot;, null)&#10;            .create()&#10;        dialog.show()&#10;    }&#10;&#10;    override fun onDestroyView() {&#10;        super.onDestroyView()&#10;        _binding = null&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.chatait.panictutorgpt.ui.dashboard&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.DatePicker&#10;import android.widget.EditText&#10;import androidx.appcompat.app.AlertDialog&#10;import androidx.fragment.app.Fragment&#10;import androidx.lifecycle.ViewModelProvider&#10;import com.chatait.panictutorgpt.R&#10;import com.chatait.panictutorgpt.databinding.FragmentDashboardBinding&#10;import java.util.Calendar&#10;&#10;class DashboardFragment : Fragment() {&#10;&#10;    private var _binding: FragmentDashboardBinding? = null&#10;&#10;    // This property is only valid between onCreateView and&#10;    // onDestroyView.&#10;    private val binding get() = _binding!!&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        val dashboardViewModel =&#10;            ViewModelProvider(this).get(DashboardViewModel::class.java)&#10;&#10;        _binding = FragmentDashboardBinding.inflate(inflater, container, false)&#10;        val root: View = binding.root&#10;&#10;        // 予定追加ボタンのクリックリスナー&#10;        binding.dashboardEntryButton.setOnClickListener {&#10;            val calendar = Calendar.getInstance()&#10;            val inflater = LayoutInflater.from(requireContext())&#10;            val datePickerView = inflater.inflate(R.layout.dialog_custom_date_picker, null)&#10;            val datePicker = datePickerView.findViewById&lt;DatePicker&gt;(R.id.customDatePicker)&#10;            datePicker.init(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH), null)&#10;&#10;            val dateDialog = AlertDialog.Builder(requireContext())&#10;                .setTitle(&quot;テストの日付を選択…&quot;)&#10;                .setView(datePickerView)&#10;                .setPositiveButton(&quot;次へ&quot;) { _, _ -&gt;&#10;                    val year = datePicker.year&#10;                    val month = datePicker.month&#10;                    val day = datePicker.dayOfMonth&#10;                    showAddScheduleForm(year, month, day)&#10;                }&#10;                .setNegativeButton(&quot;キャンセル&quot;, null)&#10;                .create()&#10;            dateDialog.show()&#10;        }&#10;&#10;        dashboardViewModel.text.observe(viewLifecycleOwner) {&#10;&#10;        }&#10;        return root&#10;    }&#10;&#10;    // 日付と教科名を入力する関数（引数で日付を受け取る）&#10;    private fun showAddScheduleForm(year: Int, month: Int, day: Int) {&#10;        val context = requireContext()&#10;        val inflater = LayoutInflater.from(context)&#10;        val dialogView = inflater.inflate(R.layout.dialog_add_schedule, null)&#10;        val subject1 = dialogView.findViewById&lt;EditText&gt;(R.id.editTextSubject1)&#10;        val subject2 = dialogView.findViewById&lt;EditText&gt;(R.id.editTextSubject2)&#10;        val subject3 = dialogView.findViewById&lt;EditText&gt;(R.id.editTextSubject3)&#10;        val subject4 = dialogView.findViewById&lt;EditText&gt;(R.id.editTextSubject4)&#10;        val subject5 = dialogView.findViewById&lt;EditText&gt;(R.id.editTextSubject5)&#10;        val subject6 = dialogView.findViewById&lt;EditText&gt;(R.id.editTextSubject6)&#10;&#10;        val dialog = AlertDialog.Builder(context)&#10;            .setTitle(&quot;科目名を入力…&quot;)&#10;            .setView(dialogView)&#10;            .setPositiveButton(&quot;追加&quot;) { _, _ -&gt;&#10;                val date = &quot;%04d/%02d/%02d&quot;.format(year, month + 1, day)&#10;                val subjects = listOf(&#10;                    subject1.text.toString(),&#10;                    subject2.text.toString(),&#10;                    subject3.text.toString(),&#10;                    subject4.text.toString(),&#10;                    subject5.text.toString(),&#10;                    subject6.text.toString()&#10;                )&#10;                // ここで予定データを保存する処理を追加可能&#10;            }&#10;            .setNegativeButton(&quot;キャンセル&quot;, null)&#10;            .create()&#10;        dialog.show()&#10;    }&#10;&#10;    override fun onDestroyView() {&#10;        super.onDestroyView()&#10;        _binding = null&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/dialog_add_schedule.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/dialog_add_schedule.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;24dp&quot;&#10;        android:hint=&quot;@string/subjectName&quot;&#10;        app:boxBackgroundMode=&quot;outline&quot;&gt;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/editTextSubject&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;12dp&quot;&#10;        android:hint=&quot;1限&quot;&#10;        app:boxBackgroundMode=&quot;outline&quot;&gt;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/editTextSubject1&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;12dp&quot;&#10;        android:hint=&quot;2限&quot;&#10;        app:boxBackgroundMode=&quot;outline&quot;&gt;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/editTextSubject2&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;12dp&quot;&#10;        android:hint=&quot;3限&quot;&#10;        app:boxBackgroundMode=&quot;outline&quot;&gt;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/editTextSubject3&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;12dp&quot;&#10;        android:hint=&quot;4限&quot;&#10;        app:boxBackgroundMode=&quot;outline&quot;&gt;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/editTextSubject4&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;12dp&quot;&#10;        android:hint=&quot;5限&quot;&#10;        app:boxBackgroundMode=&quot;outline&quot;&gt;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/editTextSubject5&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;12dp&quot;&#10;        android:hint=&quot;6限&quot;&#10;        app:boxBackgroundMode=&quot;outline&quot;&gt;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/editTextSubject6&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/dialog_custom_date_picker.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/dialog_custom_date_picker.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;wrap_content&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:paddingTop=&quot;12dp&quot;&#10;    android:paddingLeft=&quot;12dp&quot;&#10;    android:paddingRight=&quot;12dp&quot;&gt;&#10;&#10;    &lt;DatePicker&#10;        android:id=&quot;@+id/customDatePicker&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:calendarViewShown=&quot;true&quot;&#10;        android:layout_marginTop=&quot;12dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;wrap_content&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:paddingTop=&quot;12dp&quot;&#10;    android:paddingLeft=&quot;12dp&quot;&#10;    android:paddingRight=&quot;12dp&quot;&gt;&#10;&#10;    &lt;DatePicker&#10;        android:id=&quot;@+id/customDatePicker&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:calendarViewShown=&quot;true&quot;&#10;        android:layout_marginTop=&quot;12dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_dashboard.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_dashboard.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.ui.dashboard.DashboardFragment&quot;&gt;&#10;&#10;    &lt;CalendarView&#10;        android:id=&quot;@+id/calendarView&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot; /&gt;&#10;&#10;    &lt;!-- HomeのEntryボタンと同じものを下部に追加（horizontal margin 24dp） --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/dashboardEntryButton&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;24dp&quot;&#10;        android:layout_marginEnd=&quot;24dp&quot;&#10;        android:layout_marginBottom=&quot;100dp&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:text=&quot;テストの予定を追加&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;1.0&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.ui.dashboard.DashboardFragment&quot;&gt;&#10;&#10;    &lt;CalendarView&#10;        android:id=&quot;@+id/calendarView&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot; /&gt;&#10;&#10;    &lt;!-- HomeのEntryボタンと同じものを下部に追加（horizontal margin 24dp） --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/dashboardEntryButton&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;24dp&quot;&#10;        android:layout_marginEnd=&quot;24dp&quot;&#10;        android:layout_marginBottom=&quot;100dp&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:text=&quot;テストの予定を追加&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;1.0&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;24dp&quot;&#10;    android:gravity=&quot;center_horizontal&quot;&gt;&#10;&#10;    &lt;!-- 日付時刻を表示するTextView --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/dateTimeText&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;2025/08/02 14:30&quot;&#10;        android:textSize=&quot;24sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_marginBottom=&quot;32dp&quot;/&gt;&#10;&#10;    &lt;!-- 登録ボタン --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/registerButton&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Entry&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;/&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    android:layout_width=&quot;match_parent&quot;&#13;&#10;    android:layout_height=&quot;match_parent&quot;&#13;&#10;    android:orientation=&quot;vertical&quot;&#13;&#10;    android:padding=&quot;24dp&quot;&#13;&#10;    android:gravity=&quot;center_horizontal&quot;&gt;&#13;&#10;&#13;&#10;    &lt;!-- 日付時刻を表示するTextView --&gt;&#13;&#10;    &lt;TextView&#13;&#10;        android:id=&quot;@+id/dateTimeText&quot;&#13;&#10;        android:layout_width=&quot;wrap_content&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:text=&quot;2025/08/02 14:30&quot;&#13;&#10;        android:textSize=&quot;24sp&quot;&#13;&#10;        android:textStyle=&quot;bold&quot;&#13;&#10;        android:layout_marginBottom=&quot;32dp&quot;/&gt;&#13;&#10;&#13;&#10;    &lt;!-- アナログ時計を追加 --&gt;&#13;&#10;    &lt;AnalogClock&#13;&#10;        android:id=&quot;@+id/analogClock&quot;&#13;&#10;        android:layout_width=&quot;wrap_content&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:layout_marginBottom=&quot;32dp&quot;/&gt;&#13;&#10;&#13;&#10;    &lt;!-- 登録ボタン --&gt;&#13;&#10;    &lt;Button&#13;&#10;        android:id=&quot;@+id/registerButton&quot;&#13;&#10;        android:layout_width=&quot;match_parent&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:text=&quot;Entry&quot;&#13;&#10;        android:textSize=&quot;20sp&quot;&#13;&#10;        android:padding=&quot;16dp&quot;&#13;&#10;        android:layout_marginTop=&quot;16dp&quot;/&gt;&#13;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>